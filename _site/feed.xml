<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.5.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-08-29T23:37:53+09:00</updated><id>http://localhost:4000/</id><title type="html">4ox devlog</title><subtitle>devlog
</subtitle><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2017/08/28/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2017-08-28T23:25:28+09:00</published><updated>2017-08-28T23:25:28+09:00</updated><id>http://localhost:4000/jekyll/update/2017/08/28/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2017/08/28/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry><entry><title type="html">지킬 첫 글쓰기 테스트</title><link href="http://localhost:4000/noti/2017/08/28/test.html" rel="alternate" type="text/html" title="지킬 첫 글쓰기 테스트" /><published>2017-08-28T22:25:36+09:00</published><updated>2017-08-28T22:25:36+09:00</updated><id>http://localhost:4000/noti/2017/08/28/test</id><content type="html" xml:base="http://localhost:4000/noti/2017/08/28/test.html">&lt;p&gt;지킬로 블로그를 생성해 보았다.&lt;/p&gt;

&lt;p&gt;간단한 javascript 구문도 넣어본다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;c&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;d&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;e&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//result : (5) [1, 2, 3, 4, 5]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name></name></author><summary type="html">지킬로 블로그를 생성해 보았다.</summary></entry><entry><title type="html">Git 소스 설치</title><link href="http://localhost:4000/git/install/2016/12/16/git-source-install.html" rel="alternate" type="text/html" title="Git 소스 설치" /><published>2016-12-16T12:00:00+09:00</published><updated>2016-12-16T12:00:00+09:00</updated><id>http://localhost:4000/git/install/2016/12/16/git-source-install</id><content type="html" xml:base="http://localhost:4000/git/install/2016/12/16/git-source-install.html">&lt;h1 id=&quot;git-소스설치&quot;&gt;GIT 소스설치&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;다운로드 ( https://www.kernel.org/pub/software/scm/git/ )
```
wget https://www.kernel.org/pub/software/scm/git/git-2.7.4.tar.gz&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;p&gt;curl -o git-2.7.4.tar.gz https://www.kernel.org/pub/software/scm/git/git-2.7.4.tar.gz&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
* 압축풀기
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;tar -xvf git-2.7.4.tar.gz&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
* 설치
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;make prefix=/usr/local all&lt;/p&gt;

&lt;p&gt;make prefix=/usr/local install
```&lt;/p&gt;</content><author><name></name></author><summary type="html">GIT 소스설치</summary></entry><entry><title type="html">Jenkins Install</title><link href="http://localhost:4000/2016/11/24/jenkins-install.html" rel="alternate" type="text/html" title="Jenkins Install" /><published>2016-11-24T00:00:00+09:00</published><updated>2016-11-24T00:00:00+09:00</updated><id>http://localhost:4000/2016/11/24/jenkins-install</id><content type="html" xml:base="http://localhost:4000/2016/11/24/jenkins-install.html">&lt;h1 id=&quot;jenkins&quot;&gt;JENKINS&lt;/h1&gt;

&lt;h2 id=&quot;jenkins-레파지터리-등록-및-설치&quot;&gt;jenkins 레파지터리 등록 및 설치&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo
sudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key
sudo yum install jenkin
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;포트-변경-및-방화벽-등록&quot;&gt;포트 변경 및 방화벽 등록&lt;/h2&gt;
&lt;p&gt;vim /etc/sysconfig/jenkins&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;JENKINS_PORT=”9000”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;firewall-cmd --zone=public --add-port=9000/tcp --permanent
firewall-cmd --reload
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;jenkins-시작-종료-상태-명령어&quot;&gt;jenkins 시작 종료 상태 명령어&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;systemctl start jenkins.service
systemctl stop jenkins.service
systemctl status jenkins.service
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;jenkins-사용자-및-권한-관리&quot;&gt;jenkins 사용자 및 권한 관리&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;Jenkins관리 - Configure Global Security&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;Enable security 체크&lt;/li&gt;
    &lt;li&gt;Jenkins’ own user database 체크 (사용자 가입 허용 안함)&lt;/li&gt;
    &lt;li&gt;Authorization 항목에서 Matrix-based security (유저별 권한 설정)&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;jenkins-권한-관리-잘못-저장하면&quot;&gt;jenkins 권한 관리 잘못 저장하면&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vim /var/lib/jenkins/config.xml 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;useSecurity 항목을 false 처리하고 jenkins 재시작&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><summary type="html">JENKINS</summary></entry><entry><title type="html">Git Gitlab Install</title><link href="http://localhost:4000/2016/11/24/git-gitlab-install.html" rel="alternate" type="text/html" title="Git Gitlab Install" /><published>2016-11-24T00:00:00+09:00</published><updated>2016-11-24T00:00:00+09:00</updated><id>http://localhost:4000/2016/11/24/git-gitlab-install</id><content type="html" xml:base="http://localhost:4000/2016/11/24/git-gitlab-install.html">&lt;h1 id=&quot;gitlab&quot;&gt;GITLAB&lt;/h1&gt;

&lt;h2 id=&quot;gitlab-ce-설치를-위한-패키지-설치및-방화벽-설정&quot;&gt;gitlab-ce 설치를 위한 패키지 설치및 방화벽 설정&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yum install curl policycoreutils openssh-server openssh-clients
sudo systemctl enable sshd
sudo systemctl start sshd
sudo yum install postfix
sudo systemctl enable postfix
sudo systemctl start postfix
sudo firewall-cmd --permanent --add-service=http
sudo systemctl reload firewalld
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;gitlab-ce-설치&quot;&gt;gitlab-ce 설치&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -sS https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | sudo bash
yum install gitlab-ce
gitlab-ctl reconfigure
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;gitlab-ce-시작-종료-상태-명령어&quot;&gt;gitlab-ce 시작 종료 상태 명령어&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gitlab-ctl start
gitlab-ctl stop
gitlab-ctl status
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">GITLAB</summary></entry><entry><title type="html">자바 스트림 테스트</title><link href="http://localhost:4000/java/stream/2015/12/29/java-stream.html" rel="alternate" type="text/html" title="자바 스트림 테스트" /><published>2015-12-29T12:00:00+09:00</published><updated>2015-12-29T12:00:00+09:00</updated><id>http://localhost:4000/java/stream/2015/12/29/java-stream</id><content type="html" xml:base="http://localhost:4000/java/stream/2015/12/29/java-stream.html">&lt;p&gt;##JAVA&lt;/p&gt;

&lt;h3 id=&quot;자바8의-스트림&quot;&gt;자바8의 스트림&lt;/h3&gt;

&lt;p&gt;자바7 과 8의 비교 스트림
http://www.tutorialspoint.com/java8/java8_streams.htm&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-JAVA&quot;&gt;package test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.IntSummaryStatistics;
import java.util.List;
import java.util.Optional;
import java.util.Random;
import java.util.stream.Collector;
import java.util.stream.Collectors;

public class Java8Tester {


    private static int getCountEmptyStringUsingJava7(List&amp;lt;String&amp;gt; strings) {
        int count = 0;
        for (String string : strings) {
            if (string.isEmpty())
                count++;
        }
        return count;
    }

    private static int getCountLength3UsingJava7(List&amp;lt;String&amp;gt; strings) {
        int count = 0;
        for (String string : strings) {
            if (string.length() == 3)
                count++;
        }
        return count;
    }

    private static List&amp;lt;String&amp;gt; deleteEmptyStringsUsingJava7(List&amp;lt;String&amp;gt; strings) {
        List&amp;lt;String&amp;gt; filteredList = new ArrayList&amp;lt;String&amp;gt;();
        for (String string : strings) {
            if (!string.isEmpty())
                filteredList.add(string);
        }
        return filteredList;
    }

    private static String getMergedStringUsingJava7(List&amp;lt;String&amp;gt; strings, String separator) {
        StringBuilder stringBuilder = new StringBuilder();
        for (String string : strings) {
            if (!string.isEmpty()) {
                stringBuilder.append(string);
                stringBuilder.append(separator);
            }
        }
        String mergedString = stringBuilder.toString();
        return mergedString.substring(0, mergedString.length() - 2);
    }

    private static List&amp;lt;Integer&amp;gt; getSquares(List&amp;lt;Integer&amp;gt; numbers) {
        List&amp;lt;Integer&amp;gt; squaresList = new ArrayList&amp;lt;Integer&amp;gt;();

        for (Integer number : numbers) {
            Integer square = new Integer(number.intValue() * number.intValue());
            if (!squaresList.contains(square)) {
                squaresList.add(square);
            }
        }
        return squaresList;
    }

    private static int getMax(List&amp;lt;Integer&amp;gt; numbers) {
        int max = numbers.get(0);

        for (int i = 1; i &amp;lt; numbers.size(); i++) {
            Integer number = numbers.get(i);
            if (number.intValue() &amp;gt; max) {
                max = number.intValue();
            }
        }
        return max;
    }

    private static int getMin(List&amp;lt;Integer&amp;gt; numbers) {
        int min = numbers.get(0);
        for (int i = 1; i &amp;lt; numbers.size(); i++) {
            Integer number = numbers.get(i);
            if( number.intValue() &amp;lt; min ) {
                min = number.intValue();
            }
        }
        return min;
    }

    private static int getSum(List numbers) {
        int sum = (int)numbers.get(0);
        for (int i = 1; i &amp;lt; numbers.size(); i++) {
            sum += (int)numbers.get(i);
        }
        return sum;
    }

    private static int getAverage(List&amp;lt;Integer&amp;gt; numbers) {
        return getSum(numbers) / numbers.size();
    }

    public static void main(String[] args) {
        System.out.println(&quot;Using Java7 : &quot;);
        
        List&amp;lt;String&amp;gt; strings = Arrays.asList(&quot;abc&quot;, &quot;&quot;, &quot;bc&quot;, &quot;efg&quot;, &quot;abcd&quot;, &quot;&quot;, &quot;jkl&quot;);
        System.out.println(&quot;List : &quot; + strings );
        
        long count = getCountEmptyStringUsingJava7(strings);
        System.out.println(&quot;Empty Strings : &quot; + count );
        
        count = getCountLength3UsingJava7(strings);
        System.out.println(&quot;Strings of length 3 : &quot; + count );
        
        List&amp;lt;String&amp;gt; filtered = deleteEmptyStringsUsingJava7(strings);
        System.out.println(&quot;Filtered List : &quot; + filtered);
        
        String mergedString = getMergedStringUsingJava7(strings, &quot;, &quot;);
        System.out.println(mergedString);
        
        List&amp;lt;Integer&amp;gt; numbers = Arrays.asList(3,2,2,3,7,3,5);
                
        List&amp;lt;Integer&amp;gt; squaresList = getSquares(numbers);
        System.out.println(&quot;Squares List : &quot; + squaresList);
        
        List&amp;lt;Integer&amp;gt; integers = Arrays.asList(1,2,13,4,15,6,17,8,19);
        
        System.out.println(&quot;List : &quot; + integers );
        System.out.println(&quot;Highest number in List : &quot; + getMax(integers) );
        System.out.println(&quot;Lowest  number in List : &quot; + getMin(integers) );
        System.out.println(&quot;Sum  number in List : &quot; + getSum(integers) );
        System.out.println(&quot;Average  number in List : &quot; + getAverage(integers) );
        System.out.println(&quot;Random   number in List : &quot;);
        
        //print ten random numbers
        Random random = new Random();
        for(int i=0; i &amp;lt; 10; i++){
          // System.out.println(random.nextInt());
        }
        
        System.out.println(&quot;---------------------------------------------------------------------------------&quot;);
        
        System.out.println(&quot;Using Java 8: &quot;);
        System.out.println(&quot;List: &quot; +strings);
        
        count = strings.stream().filter(string-&amp;gt;string.isEmpty()).count();
        System.out.println(&quot;Empty Strings: &quot; + count);
        
        count = strings.stream().filter(string-&amp;gt;string.length() == 3 ).count();
        System.out.println(&quot;Strings of length 3 : &quot; + count );
        
        filtered = strings.stream().filter(string-&amp;gt; !string.isEmpty() ).collect(Collectors.toList());
        System.out.println(&quot;Filtered List : &quot; + filtered);
        
        mergedString = strings.stream().filter(string-&amp;gt; !string.isEmpty()).collect(Collectors.joining(&quot;, &quot;));
        System.out.println(mergedString);
        
        squaresList = numbers.stream().map( i -&amp;gt; i*i ).distinct().collect(Collectors.toList());
        System.out.println(&quot;Squares List : &quot; + squaresList);
        
        IntSummaryStatistics stats = integers.stream().mapToInt((x)-&amp;gt;x).summaryStatistics();
        
        System.out.println(&quot;List : &quot; + integers );
        System.out.println(&quot;Highest number in List : &quot; + stats.getMax() );
        System.out.println(&quot;Lowest  number in List : &quot; + stats.getMin() );
        System.out.println(&quot;Sum  number in List : &quot; + stats.getSum() );
        System.out.println(&quot;Average  number in List : &quot; + stats.getAverage() );
        System.out.println(&quot;Random   number in List : &quot;);
        
        //random.ints().limit(10).sorted().forEach(System.out::println);
        
        count = strings.parallelStream().filter(string-&amp;gt;string.isEmpty()).count();
        System.out.println(&quot;Empty Strings: &quot; + count);
        
        System.out.println(&quot;---------------------------------------------------------------------------------&quot;);
        
        System.out.println(stats.toString());
        
    }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;base64-nashorn-optional-stream-time&quot;&gt;Base64, Nashorn, Optional, Stream, Time&lt;/h3&gt;

&lt;p&gt;관련 클래스 확인함.&lt;/p&gt;</content><author><name></name></author><summary type="html">##JAVA</summary></entry><entry><title type="html">자바 콜렉션 테스트</title><link href="http://localhost:4000/java/collection/2015/12/24/java-collection.html" rel="alternate" type="text/html" title="자바 콜렉션 테스트" /><published>2015-12-24T12:00:00+09:00</published><updated>2015-12-24T12:00:00+09:00</updated><id>http://localhost:4000/java/collection/2015/12/24/java-collection</id><content type="html" xml:base="http://localhost:4000/java/collection/2015/12/24/java-collection.html">&lt;h2 id=&quot;java8&quot;&gt;JAVA8&lt;/h2&gt;

&lt;h3 id=&quot;크리스마스에-자바7-과-8의-비교-컬렉션에대해-공부해봤다&quot;&gt;크리스마스에 자바7 과 8의 비교 컬렉션에대해 공부해봤다.&lt;/h3&gt;

&lt;p&gt;http://www.tutorialspoint.com/java8/java8_overview.htm&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-JAVA&quot;&gt;package test;

import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Comparator;

public class Java8Tester {
    private void sortUsingJava7( List&amp;lt;String&amp;gt; names ) {
       Collections.sort( names , new Comparator&amp;lt;String&amp;gt;() {
            @Override
            public int compare(String s1, String s2) {
                return s1.compareTo(s2);
            }
       });
    }
    private void sortUsingJava8(List&amp;lt;String&amp;gt; names ) {
        Collections.sort( names, (s1, s2 ) -&amp;gt; s1.compareTo(s2) );
    }
    public static void main(String args[]) {

        List&amp;lt;String&amp;gt; names1 = new ArrayList&amp;lt;String&amp;gt;();
        names1.add(&quot;ys &quot;);
        names1.add(&quot;mhk &quot;);
        names1.add(&quot;bjh &quot;);
        names1.add(&quot;jjk &quot;);
        names1.add(&quot;kdw &quot;);
        names1.add(&quot;jih &quot;);
        names1.add(&quot;4ox &quot;);
        names1.add(&quot;khs &quot;);
        names1.add(&quot;jsh &quot;);

        List&amp;lt;String&amp;gt; names2 = new ArrayList&amp;lt;String&amp;gt;();
        names2.add(&quot;ys &quot;);
        names2.add(&quot;mhk &quot;);
        names2.add(&quot;bjh &quot;);
        names2.add(&quot;jjk &quot;);
        names2.add(&quot;kdw &quot;);
        names2.add(&quot;jih &quot;);
        names2.add(&quot;4ox &quot;);
        names2.add(&quot;khs &quot;);
        names2.add(&quot;jsh &quot;);
        
        Java8Tester tester = new Java8Tester();
        System.out.println(&quot;JAVA7&quot;);
        tester.sortUsingJava7(names1);
        System.out.println(names1);
        
        System.out.println(&quot;JAVA8&quot;);
        tester.sortUsingJava8(names2);
        System.out.println(names2);
    }


}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;자바8의-람다-표선식을-테스트-해보았다&quot;&gt;자바8의 람다 표선식을 테스트 해보았다.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-JAVA&quot;&gt;package test;

import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Comparator;

public class Java8Tester {
    interface MathOperation {
        int operation(int a, int b);
    }

    interface GreetingService {
        void sayMessage(String message);
    }

    private int operate(int a, int b, MathOperation mathOperation) {
        return mathOperation.operation(a, b);
    }

    public static void main(String[] args) {
        Java8Tester tester = new Java8Tester();

        MathOperation addition = (int a, int b) -&amp;gt; a + b;
        
        MathOperation subtraction = ( a, b ) -&amp;gt; a - b;
        
        MathOperation multiplication = (int a, int b ) -&amp;gt; { return a * b; };
        
        MathOperation division = (int a, int b ) -&amp;gt; a / b;
        
        int a = 10, b = 5;
        System.out.println( a + &quot; + &quot; + b + &quot; = &quot; + tester.operate( a, b, addition ) );
        System.out.println( a + &quot; - &quot; + b + &quot; = &quot; + tester.operate( a, b, subtraction ) );
        System.out.println( a + &quot; x &quot; + b + &quot; = &quot; + tester.operate( a, b, multiplication ) );
        System.out.println( a + &quot; / &quot; + b + &quot; = &quot; + tester.operate( a, b, division ) );
        
        GreetingService greetingService1 = message -&amp;gt; System.out.println(&quot;Hello&quot; + message );
        GreetingService greetingService2 = message -&amp;gt; System.out.println(&quot;Hello&quot; + message );
        
        greetingService1.sayMessage(&quot;WTF&quot;);
        greetingService2.sayMessage(&quot;WTF2&quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;자바8의-메소드-레퍼런스를-테스트해보았다&quot;&gt;자바8의 메소드 레퍼런스를 테스트해보았다.&lt;/h3&gt;
&lt;p&gt;http://www.tutorialspoint.com/java8/java8_method_references.htm&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-JAVA&quot;&gt;package test;

import java.util.ArrayList;

public class Java8Tester {
    public static void main(String[] args) {
        
        ArrayList&amp;lt;String&amp;gt; names = new ArrayList&amp;lt;String&amp;gt;();
        names.add(&quot;A&quot;);
        names.add(&quot;B&quot;);
        names.add(&quot;C&quot;);
        names.add(&quot;D&quot;);
        names.add(&quot;E&quot;);
        names.add(&quot;F&quot;);
        names.add(&quot;G&quot;);
        
        names.forEach(System.out::println);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;자바8의-펑셔널-인터페이스를-테스트해보았다&quot;&gt;자바8의 펑셔널 인터페이스를 테스트해보았다.&lt;/h3&gt;
&lt;p&gt;http://www.tutorialspoint.com/java8/java8_functional_interfaces.htm&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-JAVA&quot;&gt;package test;

import java.util.Arrays;
import java.util.List;
import java.util.function.Predicate;

public class Java8Tester {
    
    public static void eval( List&amp;lt;Integer&amp;gt; list, Predicate&amp;lt;Integer&amp;gt; predicate ) {
        for(Integer n:list) 
            if(predicate.test(n))
                System.out.print( n + &quot; &quot;);
        System.out.println(&quot;&quot;);
    }
    
    public static void main(String[] args) {
        List&amp;lt;Integer&amp;gt; list = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9);
        
        System.out.print(&quot;Print all numbers : &quot;);
        eval(list , n -&amp;gt; true );
        
        System.out.print(&quot;Print even numbers : &quot;);
        eval(list , n -&amp;gt; n % 2 == 0 );

        System.out.print(&quot;Print greater than 3 numbers : &quot;);
        eval(list , n -&amp;gt; n &amp;gt; 3 );
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;자바8의-스트림을-공부중이다가-집에감&quot;&gt;자바8의 스트림을 공부중이다가 집에감&lt;/h3&gt;
&lt;p&gt;http://www.tutorialspoint.com/java8/java8_streams.htm&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-JAVA&quot;&gt;package test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.function.Predicate;

public class Java8Tester {


    private static int getCountEmptyStringUsingJava7(List&amp;lt;String&amp;gt; strings) {
        int count = 0;
        for (String string : strings) {
            if (string.isEmpty())
                count++;
        }
        return count;
    }

    private static int getCountLength3UsingJava7(List&amp;lt;String&amp;gt; strings) {
        int count = 0;
        for (String string : strings) {
            if (string.length() == 3)
                count++;
        }
        return count;
    }

    private static List&amp;lt;String&amp;gt; deleteEmptyStringsUsingJava7(List&amp;lt;String&amp;gt; strings) {
        List&amp;lt;String&amp;gt; filteredList = new ArrayList&amp;lt;String&amp;gt;();
        for (String string : strings) {
            if (!string.isEmpty())
                filteredList.add(string);
        }
        return filteredList;
    }

    private static String getMergedStringUsingJava7(List&amp;lt;String&amp;gt; strings, String separator) {
        StringBuilder stringBuilder = new StringBuilder();
        for (String string : strings) {
            if (!string.isEmpty()) {
                stringBuilder.append(string);
                stringBuilder.append(separator);
            }
        }
        String mergedString = stringBuilder.toString();
        return mergedString.substring(0, mergedString.length() - 2);
    }

    private static List&amp;lt;Integer&amp;gt; getSquares(List&amp;lt;Integer&amp;gt; numbers) {
        List&amp;lt;Integer&amp;gt; squaresList = new ArrayList&amp;lt;Integer&amp;gt;();

        for (Integer number : numbers) {
            Integer square = new Integer(number.intValue() * number.intValue());
            if (!squaresList.contains(square)) {
                squaresList.add(square);
            }
        }
        return squaresList;
    }

    private static int getMax(List&amp;lt;Integer&amp;gt; numbers) {
        int max = numbers.get(0);

        for (int i = 1; i &amp;lt; numbers.size(); i++) {
            Integer number = numbers.get(i);
            if (number.intValue() &amp;gt; max) {
                max = number.intValue();
            }
        }
        return max;
    }

    private static int getMin(List&amp;lt;Integer&amp;gt; numbers) {
        int min = numbers.get(0);
        for (int i = 1; i &amp;lt; numbers.size(); i++) {
            Integer number = numbers.get(i);
            if( number.intValue() &amp;lt; min ) {
                min = number.intValue();
            }
        }
        return min;
    }

    private static int getSum(List numbers) {
        int sum = (int)numbers.get(0);
        for (int i = 1; i &amp;lt; numbers.size(); i++) {
            sum += (int)numbers.get(i);
        }
        return sum;
    }

    private static int getAverage(List&amp;lt;Integer&amp;gt; numbers) {
        return getSum(numbers) / numbers.size();
    }

    public static void main(String[] args) {
        System.out.println(&quot;Using Java7 : &quot;);
        
        List&amp;lt;String&amp;gt; strings = Arrays.asList(&quot;abc&quot;, &quot;&quot;, &quot;bc&quot;, &quot;efg&quot;, &quot;abcd&quot;, &quot;&quot;, &quot;jkl&quot;);
        System.out.println(&quot;List : &quot; + strings );
        
        long count = getCountEmptyStringUsingJava7(strings);
        System.out.println(&quot;Empty Strings : &quot; + count );
        
        count = getCountLength3UsingJava7(strings);
        System.out.println(&quot;Strings of length 3 : &quot; + count );
        
        List&amp;lt;String&amp;gt; filtered = deleteEmptyStringsUsingJava7(strings);
        System.out.println(&quot;Filtered List : &quot; + filtered);
        
        String mergedString = getMergedStringUsingJava7(strings, &quot;, &quot;);
        System.out.println(mergedString);
        
        List&amp;lt;Integer&amp;gt; numbers = Arrays.asList(3,2,2,3,7,3,5);
                
        List&amp;lt;Integer&amp;gt; squaresList = getSquares(numbers);
        System.out.println(&quot;Squares List : &quot; + squaresList);
        
        List&amp;lt;Integer&amp;gt; integers = Arrays.asList(1,2,13,4,15,6,17,8,19);
        
        System.out.println(&quot;List : &quot; + integers );
        System.out.println(&quot;Highest number in List : &quot; + getMax(integers) );
        System.out.println(&quot;Lowest  number in List : &quot; + getMin(integers) );
        System.out.println(&quot;List : &quot; + integers );
        System.out.println(&quot;List : &quot; + integers );
        System.out.println(&quot;List : &quot; + integers );
        
    }
}

&lt;/code&gt;&lt;/pre&gt;</content><author><name></name></author><summary type="html">JAVA8</summary></entry><entry><title type="html">자바 람다 테스트</title><link href="http://localhost:4000/java/lambda/2015/12/23/java-lambda-test.html" rel="alternate" type="text/html" title="자바 람다 테스트" /><published>2015-12-23T12:00:00+09:00</published><updated>2015-12-23T12:00:00+09:00</updated><id>http://localhost:4000/java/lambda/2015/12/23/java-lambda-test</id><content type="html" xml:base="http://localhost:4000/java/lambda/2015/12/23/java-lambda-test.html">&lt;h2 id=&quot;java8&quot;&gt;JAVA8&lt;/h2&gt;

&lt;p&gt;자바8의 람다식을 테스트해봤다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-JAVA&quot;&gt;package test;

import java.util.ArrayList;

public class main {
    public static void main(String[] args) {
        ArrayList&amp;lt;Integer&amp;gt; arrayList = new ArrayList&amp;lt;&amp;gt;();
        ArrayList&amp;lt;Integer&amp;gt; arrayList2 = new ArrayList&amp;lt;&amp;gt;();
        
        for(int i = 1; i &amp;lt; 100; i++ ) arrayList.add(i);
        
        //람다 테스트
        arrayList.forEach( i -&amp;gt; arrayList2.add(i * 11) );
        arrayList2.forEach( i -&amp;gt; System.out.println(i) );
    }
}
&lt;/code&gt;&lt;/pre&gt;</content><author><name></name></author><summary type="html">JAVA8</summary></entry><entry><title type="html">GET URL의 파라미터를 가져오는 함수</title><link href="http://localhost:4000/javascript/2015/10/13/javascript-url-parameter.html" rel="alternate" type="text/html" title="GET URL의 파라미터를 가져오는 함수" /><published>2015-10-13T12:00:00+09:00</published><updated>2015-10-13T12:00:00+09:00</updated><id>http://localhost:4000/javascript/2015/10/13/javascript-url-parameter</id><content type="html" xml:base="http://localhost:4000/javascript/2015/10/13/javascript-url-parameter.html">&lt;h1 id=&quot;get-url의-파라미터를-가져오는-한줄-함수&quot;&gt;GET URL의 파라미터를 가져오는 한줄 함수&lt;/h1&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//get url parameter&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\?&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;|&amp;amp;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;위-함수-응용-파라미터와-쿠키를-가져오고-세팅할수-있는-함수&quot;&gt;위 함수 응용 파라미터와 쿠키를 가져오고 세팅할수 있는 함수&lt;/h1&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;	
	&lt;span class=&quot;c1&quot;&gt;//location search 와 document cookie 처리&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\?&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;|&amp;amp;|;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;//Parameter&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;param&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;search&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getParam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;//Cookie&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getCookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;cookie&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cookie&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setCookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;expire&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setDate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getDate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;expire&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cookie&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;=&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;escape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;expire&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;;expires=&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toUTCString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;cookie&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getCookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;//Return Function&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;getParam&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getParam&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;getCookie&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getCookie&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;setCookie&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setCookie&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">GET URL의 파라미터를 가져오는 한줄 함수 //get url parameter var p={};location.search.split(/\?|&amp;amp;/).map(function(s){s=s.split(&quot;=&quot;);if(s[0])p[s[0]]=s[1];});</summary></entry><entry><title type="html">코딩 테스트 : 1이 몇번 들어 있는지 세어라.</title><link href="http://localhost:4000/quiz/2015/10/12/quiz-coding.html" rel="alternate" type="text/html" title="코딩 테스트 : 1이 몇번 들어 있는지 세어라." /><published>2015-10-12T15:16:20+09:00</published><updated>2015-10-12T15:16:20+09:00</updated><id>http://localhost:4000/quiz/2015/10/12/quiz-coding</id><content type="html" xml:base="http://localhost:4000/quiz/2015/10/12/quiz-coding.html">&lt;h1 id=&quot;coding-test&quot;&gt;CODING TEST&lt;/h1&gt;

&lt;p&gt;정수 2개 a,b를 입력받으면 a부터 b까지의 수 중 1이 몇 번 들어 있는지 세는(return) 함수를 작성하고.
다음의 숫자를 입력했을 때 받아온 값을 출력 하는 프로그램을 작성하시오.
(숫자의 어느 위치에든 1이 있으면 개수를 센다)&lt;/p&gt;

&lt;p&gt;a=10, b=2000000&lt;/p&gt;

&lt;h2 id=&quot;java&quot;&gt;JAVA&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;language-JAVA&quot;&gt;public class test {
	public static int count1(int num) {
		int cnt = 0;
		
		int firstInt = 0, tmpInt = num, pow, temp = num, term;
		for( int i = 0, ilen = (int)Math.log10(num)+1; i &amp;lt; ilen ; i++ ) {
			pow = (int)Math.pow(10, i);
			firstInt = tmpInt % 10;
			tmpInt = tmpInt / 10;
			
			cnt += (i * (int)Math.pow(10, i-1) ) * firstInt;
			if( firstInt &amp;gt; 1 ) {
				cnt += pow;
			}
			else if( firstInt == 1 ) {
				term = num-temp;
				cnt+= term &amp;gt; 0 ? term + 1:1;
			}
			temp-= pow*firstInt;
		}
		return cnt;
	}
	public static int countOne(int min, int max) {
		return count1(max)-count1(min);
	}
	public static void main(String[] args) {
		int n = test.countOne(10, 2000000);
        System.out.println( n );
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;javascript&quot;&gt;JAVASCRIPT&lt;/h2&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;count1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstInt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tmpInt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;term&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ilen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ilen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;pow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;firstInt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tmpInt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;tmpInt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tmpInt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstInt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstInt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;term&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;term&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;term&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;countOne&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;count1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;count1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;countOne&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2000000&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;COUNT : &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;답 : 2199998&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><summary type="html">CODING TEST</summary></entry></feed>